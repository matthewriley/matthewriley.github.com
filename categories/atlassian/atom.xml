<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: atlassian | Matthew Riley]]></title>
  <link href="http://matthewriley.us/categories/atlassian/atom.xml" rel="self"/>
  <link href="http://matthewriley.us/"/>
  <updated>2013-02-28T11:19:52-07:00</updated>
  <id>http://matthewriley.us/</id>
  <author>
    <name><![CDATA[Matthew Riley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Behind the Firewall with Atlassian Stash]]></title>
    <link href="http://matthewriley.us/git-behind-the-firewall-with-atlassian-stash"/>
    <updated>2013-02-28T00:00:00-07:00</updated>
    <id>http://matthewriley.us/git-behind-the-firewall-with-atlassian-stash</id>
    <content type="html"><![CDATA[<p>GitHub is the undeniable center of the open source universe. With many millions of repositories GitHub is the place to go when publishing open source software. However if you're building software within an enterprise environment, it's likely executives are not keen on the idea of making internal code public. And since executives also don't like storing that code on a server that they don't own and control, <a href="https://github.com/plans">paid GitHub plans</a> are not an option. Executives will want that code managed with some kind of enterprise grade product that runs on a company server and is tied to corporate security and backup policies. In order to accomplish that there are two clear choices: <a href="https://enterprise.github.com/">GitHub Enterprise</a> and <a href="https://www.atlassian.com/software/stash">Atlassian Stash</a>.</p>

<p>Where GitHub Enterprise is basically an internal copy of GitHub running on your server, Stash is a very lightweight web interface for Git repositories. The user interface is very reminiscent of Atlassian's <a href="https://bitbucket.org/">Bitbucket</a> so you can easily think of Stash as Bitbucket Lite. Stash wraps your repositories with its security mechanisms allowing you to <a href="https://confluence.atlassian.com/display/STASH/External+user+directories">tie into a user directory</a> of your choice. Stash also gives you <a href="https://confluence.atlassian.com/display/STASH/Using+pull+requests+in+Stash">pull requests</a> and depending upon how you do code reviews, this could be a very powerful feature. In my case, pull requests have become the defacto way of doing code reviews. Since Stash runs on your hardware under Windows or Linux, you can install Stash on a box or VM image already configured to follow your security and backup policies.</p>

<!-- more -->


<p>Stash is a relatively small application so <a href="https://confluence.atlassian.com/display/STASH/Getting+started">installing Stash</a> is as easy as downloading a zip or tar.gz file and extracting it to your server. You then create a separate home directory for stash to store some settings and the repositories. Once that's done, you modify a few settings files to tell Stash where everything is and then start up Stash. If you're deploying Stash to a production environment you would connect Stash to your user directory, an <a href="https://confluence.atlassian.com/display/STASH/Connecting+Stash+to+an+external+database">external database server</a> and a <a href="https://confluence.atlassian.com/display/STASH/Setting+up+your+mail+server">mail server</a>. Otherwise, at this point Stash is ready for you to start importing your code.</p>

<p>On its own Stash is very lightweight with the minimal functionality required for you to host Git repositories internally. Stash does not have some of the features found with GitHub Enterprise like an issue tracker and a wiki, likely because Atlassian has a separate wiki product with <a href="http://www.atlassian.com/software/confluence">Confluence</a> and an issue tracker with <a href="https://www.atlassian.com/software/jira">Jira</a>. Like all Atlassian products, excellent integration with other Atlassian products is available out of the box. Another common Atlassian feature found in Stash is being able to extend the base functionality with add-ons. Want to see a graph of commits and contributors? <a href="https://marketplace.atlassian.com/plugins/com.stiltsoft.stash.graphs">Awesome Graphs</a> has you covered. Interested in commenting on changeset diffs? <a href="https://marketplace.atlassian.com/plugins/com.appfusions.stash.stash-commenter">Stash Commenter</a> can take care of that. How about a splash of gamification with badges? <a href="https://marketplace.atlassian.com/plugins/nl.stefankohler.stash.badgr">Badgr</a> adds that splash of fun to your repositories.</p>

<p>Repositories in Stash are organized into projects. In my implementation of Stash, I've equated projects to logical teams. The group I work with has all of our repositories under a single project. Permissions are assigned at the project level and with our internal user directory connected, all I need to do is assign our directory group permissions to our project and I'm done. In order to clone a repo, a user has to supply their username and password and then again for any push or pull from the server. This can become a bit of a pain but Atlassian provides a way to <a href="https://confluence.atlassian.com/display/STASH/Permanently+authenticating+with+Git+repositories">permanently authenticate with the repository</a>.</p>

<p>Permissions are assigned at the project level but it would be nice to see permissions at the repository level. The problem I'm dealing with right now is with one user not in our directory group that regularly commits to one of our repositories. I either have to add that user to the project level (granting access to all of our repositories) or break that repo out as a separate project (which would change the git URL everyone is already using). Stash has an interesting <a href="https://confluence.atlassian.com/display/STASH/Using+branch+permissions">branch permissions</a> model that admittedly I have not experimented with yet. Branch permissions may provide the security I'm looking for.</p>

<p>The other permissions issue I have is when it comes to code deployment. Stash currently does not support anonymous access to the Git repositories, even if I set the default project permissions to read only or read and write. That means I have to burn a user license to create a service account that my code deployment server can use. Additionally when I register the Git URL with my deployment server, I have to include the username and password in the Git URL in order for it to work: <code>http://username:password@stash.example.com/scm/AB/repository.git</code>. The security concern here is apparent but since Stash is running behind the firewall, the risk is managed. Atlassian is <a href="https://jira.atlassian.com/browse/STASH-2565">aware of the issue</a> and I hope a future update brings resolution to this.</p>

<p>Speaking of updates, a common concern I have regarding all enterprise software, including Stash, is how those updates are applied. Typically an update is applied by downloading it and then either manually applying the update or running an installer. In the enterprise environments I've worked in, that means filling out paperwork, requesting temporary server access and navigating corporate bureaucracy. The process can take anywhere from a few days to a few weeks and all of this assumes I'm allowed to install the software in the first place. Otherwise I have to wait for an already very busy server operations group to get to my small update when they can.</p>

<p>I would love it if all Atlassian products included an updater. When an update is available, show a notification with a link to the admin screen. Then give me an option to have the system apply the update itself (just like Chrome and FF) or show a link to download the update and apply it the old fashioned way. I understand there may be major updates that are not backwards compatible forcing a manual update but an updater, at the very least, should be able to deploy all of the point releases for me. Having this kind of functionality would save me days, if not weeks, of headaches and would dramatically reduce the total cost of ownership for all enterprise software, including Stash.</p>

<p>Being a web applications engineer, I'm always curious to see what other folks are using so I poked around the Stash directory. Stash runs as a Tomcat application but you don't need to have Tomcat already installed. Everything is configured out of the box which is always very nice when installing new software. When looking at the application itself, I see RequireJS, AMD modules, jQuery, Backbone, LESS, Closure Templates and undoubtedly far more technology I've missed. A truly impressive technology stack. Additional kudos to the Atlassian engineers that added the nice SVG animated logo on mouseover. A really fun easter egg which I'm sure was not easy to build.</p>

<p>Often enterprise tools have a bad reputation of being bloated, burdensome and difficult to configure when attempting to navigate a myriad of settings screens. I can confidently say Stash is the exact opposite. With an easy installation, a clean user interface, pull requests and add-ons Stash is, at the very least, worth a close look. And when you look at <a href="https://www.atlassian.com/software/stash/pricing">Atlassian's pricing for Stash</a>, it might be worth a small ten user installation. Stash does a great job of providing enough functionality to help you get the job done while staying out of your way. GitHub is certainly the hub for Open Source, but behind your firewall Atlassian makes a very strong case for Stash being the center of your enterprise application code.</p>
]]></content>
  </entry>
  
</feed>
